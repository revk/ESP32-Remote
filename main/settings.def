
gpio	gfx.pwr						// Display power
gpio	gfx.ena						// Display ENA
gpio	gfx.mosi	4				// Display MOSI
gpio	gfx.sck		5				// Display SCK
gpio	gfx.cs		6				// Display CS
gpio	gfx.dc		7				// Display DC
gpio	gfx.rst		8				// Display RST
gpio	gfx.bl		9				// Display Backlight
gpio	gfx.busy					// Display BUSY
u8	gfx.flip					// Display Flip

bit	ha.announce	1				// Home Assistant announce
u16	reporting	60	.unit="s"		// Report interval

gpio	btns		"-38 -37 -39 -40 -36" .array=5	// Buttons N/S/E/W/P

gpio	scl		1				// I2C SCL
gpio	sda		2				// I2C SDA

gpio	ds18b20		35				// DS18B20 Temp sensors

u8	mcp9808.i2c	"18"	.set .hex		// MCP9808 Temp sensor
s16	mcp9808.dt	-4	.live .unit="°" .decimal=2	// MCP9808 Temp offset

u8	tmp1075.i2c	"48"	.set .hex		// TMP1075 Temp sensor
s16	tmp1075.dt	-4	.live .unit="°" .decimal=2	// TMP1075 Temp offset

u8	scd41.i2c	"62"	.set .hex		// SCD41 CO2 sensor
s16	scd41.dt	0	.live .unit="°" .decimal=2	// SCD41 Temp offset

u8	gzp6816d.i2c	"78"	.set .hex		// GZP6816D Pressure sensor
s16	gzp6816d.dt	-6	.live .unit="°" .decimal=2	// GZP6816D Temp offset

u8	veml6040.i2c	"10"	.set .hex		// VEML6040 Light sensor
u16	veml6040.dark		.live .decimal=1 .unit="lux"	// Level below which we turn off display

u8	t6793.i2c	"15"	.set .hex		// T6793 CO2 sensor
s16	t6793.dt	0	.live .unit="°" .decimal=2	// T6793 Temp offset

bit	no.mode			.live			// No mode control
bit	no.fan			.live			// No fan control
bit	no.co2			.live			// No CO2 display
bit	no.rh			.live			// No RH display
bit	fan3			.live			// Fan is L/M/H not 5 level

bit	fahrenheit					// Fahrenheit

u16	ac.start		.live .digits=4 .unit="HHMM"		// Start time
u16	ac.stop			.live .digits=4 .unit="HHMM"		// Stop time
s16	ac.target	22	.live .unit="°" .decimal=1      // Target
enum	ac.mode		1	.live .enums="Unspecified,Auto,Fan,Dry,Cool,Heat,Reserved,Faikin"	// A/C Mode
enum	ac.fan		1	.live .enums="Unspecified,Auto,1,2,3,4,5,Quiet"		// A/C Fan
s16	ac.dt		0	.live .unit="°" .decimal=2	// AC Temp offset (Faikin auto)

s	ble.temp		.live 			// ID of BLE reference temp
s	ble.faikin		.live 			// ID of Faikin to track
enum	ble.advert		.live .enums="Faikin,BTHome1,BTHome2"	// BLE advertisement type

enum	temp.ref		.live .enums="Auto,MCP9808,TMP1075,SCD41,GZP6816D,BLE,AC,DS18B200,DS18B201"	// Primary reference temperature
s8	temp.margin	1	.live .unit="°" .decimal=1	// Temp target ± margin
s16	temp.min	16	.live .unit="°" .decimal=1      // Min temp target
s16	temp.max	32	.live .unit="°" .decimal=1      // Max temp target
u8	temp.step	0.5	.live .unit="°" .decimal=1      // Target steps

s8	temp.blue	15	.live .unit="°"		// Temp considered cold 
s8	temp.red	25	.live .unit="°"		// Temp considered hot

u8	time.step	15	.live .unit="min"	// Time steps

u8	early.cool	5	.live .unit="°/h" .decimal=1      // Early on assumed cool rate
u8	early.heat	5	.live .unit="°/h" .decimal=1      // Early on assumed heat rate

u8	rh.green	40	.live .unit="%"		// RH considered low
u8	rh.red		60	.live .unit="%"		// RH considered high

u16	co2.green	800	.live .unit="ppm"	// CO2 considered low
u16	co2.red		1200	.live .unit="ppm"	// CO2 considered high

s	mqtt.fan		.live			// MQTT to control Fan
s	mqtt.rad		.live			// MQTT to control Radiator
